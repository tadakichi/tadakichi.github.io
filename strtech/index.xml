<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts of strategies and techniques on Tadakichi&#39;s Quant World</title>
    <link>https://tadakichi.github.io/strtech/</link>
    <description>Recent content in Posts of strategies and techniques on Tadakichi&#39;s Quant World</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Jason Lee</copyright>
    <lastBuildDate>Sun, 03 Sep 2017 08:13:17 -0700</lastBuildDate>
    
	<atom:link href="https://tadakichi.github.io/strtech/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Quant with Java - Calculating stocks&#39; moving average based momentum with Java Custom Collector</title>
      <link>https://tadakichi.github.io/strtech/calculate_momentum_with_java_custom_collector/</link>
      <pubDate>Sun, 03 Sep 2017 08:19:29 -0700</pubDate>
      
      <guid>https://tadakichi.github.io/strtech/calculate_momentum_with_java_custom_collector/</guid>
      <description>Purpose This time, we will see how we can read data from a file and calculate stock&amp;rsquo;s simple moving average based momentum with Java&amp;rsquo;s Stream and a custom collector.
Data As follows, stock price data is stored in a single file.
m,2007-01-02,A005930,1309000 m,2007-01-02,A000660,35550 m,2007-01-02,A005380,224500 ... m,2007-01-03,A005930,1409000 m,2007-01-03,A000660,33050 ... m,2008-01-03,A005930,1209000 m,2008-01-03,A000660,37050 ...  Price data&amp;rsquo;s DTO will be like this;
@Getter @Setter @ToString @AllArgsConstructor public class MarketDto&amp;lt;N extends Number&amp;gt; { private String type; private LocalDate date; private String symbol; private N value; @EqualsAndHashCode(callSuper = true) @ToString(callSuper = true) public static class PriceVo extends MarketDto&amp;lt;Integer&amp;gt; { public PriceVo(String type, LocalDate date, String symbol, int value) { super(type, date, symbol, value); } } .</description>
    </item>
    
  </channel>
</rss>